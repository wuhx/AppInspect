name: Module

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**/README.md'
jobs:
  build:
    runs-on: ubuntu-20.04
    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: gradle-deps-core-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            gradle-deps
      - name: Cache Gradle Build
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/build-cache-*
          key: gradle-builds-core-${{ github.sha }}
          restore-keys: |
            gradle-builds
      - name: Build with Gradle
        run: |
          mkdir -p ~/.gradle/wrapper
          mkdir -p ~/.gradle/caches
          [ $(du -s ~/.gradle/wrapper | awk '{ print $1 }') -gt 250000 ] && rm -rf ~/.gradle/wrapper/* || true
          find ~/.gradle/caches -exec touch -d "2 days ago" {} + || true
          echo 'org.gradle.caching=true' >> gradle.properties
          echo 'org.gradle.parallel=true' >> gradle.properties
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
          cp module.example.gradle module.gradle
          ./gradlew zipDebug zipRelease
      - name: Prepare artifact
        if: success()
        id: prepareArtifact
        run: |
          releaseName=`ls out/riru-template-*-release.zip | awk -F '(/|.zip)' '{print $2}'` && echo "::set-output name=releaseName::$releaseName"
          debugName=`ls out/riru-template-*-debug.zip | awk -F '(/|.zip)' '{print $2}'` && echo "::set-output name=debugName::$debugName"
          unzip out/riru-template-*-release.zip -d riru-template-release
          unzip out/riru-template-*-debug.zip -d riru-template-debug
      - name: Upload release
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.prepareArtifact.outputs.releaseName }}
          path: './riru-template-release/*'
      - name: Upload debug
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.prepareArtifact.outputs.debugName }}
          path: './riru-template-debug/*'
